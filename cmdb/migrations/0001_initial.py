# Generated by Django 2.0.4 on 2018-04-30 14:00

import cmdb.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
       # ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=32, verbose_name='中文名')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户详情',
                'verbose_name_plural': '用户详情',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FileInfo',
            fields=[
                ('id', models.AutoField(max_length=1, primary_key=True, serialize=False)),
                ('filePath', models.FileField(upload_to=cmdb.models.FileInfo.user_directory_path, verbose_name='上传路径')),
                ('swfPath', models.CharField(default='test', max_length=128)),
                ('fileOsPath', models.CharField(default='test', max_length=128)),
                ('swfOsPath', models.CharField(default='test', max_length=128)),
                ('secret', models.CharField(choices=[('非密', '非密'), ('内部', '内部'), ('秘密', '秘密')], max_length=2, verbose_name='密级')),
                ('categoryStr', models.CharField(default='test', max_length=128)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, max_length=8, verbose_name='上传日期')),
                ('abstract', models.TextField(blank=True, verbose_name='简介')),
            ],
            options={
                'verbose_name': '文档资源',
                'verbose_name_plural': '文档资源',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=64)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, max_length=8, verbose_name='创建日期')),
                ('directoryPath', models.CharField(default='test', max_length=128)),
                ('directoryOsPath', models.CharField(default='test', max_length=128)),
            ],
            options={
                'verbose_name': '文档目录',
                'verbose_name_plural': '文档目录',
            },
        ),
        migrations.AddField(
            model_name='fileinfo',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.FileType', verbose_name='目录'),
        ),
        migrations.AddField(
            model_name='fileinfo',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
